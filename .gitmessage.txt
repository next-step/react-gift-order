# --------------------------- 작성 공간 ---------------------------
# 예시: feat(auth): 사용자 로그인 기능 추가

# ---------------------------------------------------------------

# AngularJS Git Commit Message Conventions 기반 커밋 메시지 템플릿
# 아래 설명을 참고해서 커밋 메시지를 작성.

# <type>(<scope>): <subject>

# type: 커밋의 목적을 명확히 표현. 반드시 아래 타입 중 하나를 사용!:
#   feat     : 새로운 기능 추가
#   fix      : 버그 수정
#   docs     : 문서 수정 (README 등)
#   style    : 코드 포맷팅, 세미콜론 누락 등 (동작 변화 없음)
#   refactor : 코드 리팩토링 (기능 추가/수정 없음)
#   perf     : 성능 향상
#   test     : 테스트 코드 추가 및 수정
#   build    : 빌드 관련 변경사항 (예: npm, webpack, vite 설정 등)
#   ci       : CI 설정 변경 (GitHub Actions 등)
#   chore    : 기타 변경사항 (예: 패키지 관리, lint 설정 등)

# scope: 선택 사항이며, 영향을 받은 모듈이나 기능명을 작성.
#   예: login, user-api, header, auth, dashboard 등

# subject: 50자 이내로 간결하게 요약. 명령형 현재 시제로 작성!
#   예: "add login validation logic"

# 본문(선택사항): 한 줄 비우고 상세 설명을 작성.
# 한 줄 최대 100자, 여러 줄로 작성 가능하며, 무엇을 왜 했는지 설명.

# 꼬리말(선택사항): 이슈 트래킹 연동 시 사용
#   예:
#   BREAKING CHANGE: 로그인 로직이 변경되어 기존 API와 호환되지 않음
#   Closes #123, #124